server {
	listen 80;
	listen [::]:80;

	server_name i7a302.p.ssafy.io;
	index index.html index.htm;
	root /var/www/html;

	location ~ /.well-known/acme-challenge {
		allow all;
		root /var/www/html;
	}

	location / {
		rewrite ^ https://$host$request_uri? permanent;
		try_files $uri $uri/ /index.html;
	}

	location /user {
  		proxy_pass http://i7a302.p.ssafy.io:8081;
	}

	location /doctor {
  		proxy_pass http://i7a302.p.ssafy.io:8081;
	}

	location /appointment {
  		proxy_pass http://i7a302.p.ssafy.io:8081;
	}

}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name i7a302.p.ssafy.io;

	index index.html index.htm;
	root /var/www/html;

	server_tokens off;
	client_max_body_size 100M;

	ssl_certificate /etc/letsencrypt/live/i7a302.p.ssafy.io/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/i7a302.p.ssafy.io/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/i7a302.p.ssafy.io/chain.pem;
	include /etc/nginx/conf.d/options-ssl-nginx.conf;

	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header Referrer-Policy "no-referrer-when-downgrade" always;
	add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
	# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	# enable strict transport security only if you understand the implications

	location / {
		try_files $uri $uri/ /index.html;
	}

	location /user {
  		proxy_pass http://i7a302.p.ssafy.io:8081;
	}

	location /doctor {
  		proxy_pass http://i7a302.p.ssafy.io:8081;
	}

	location /appointment {
  		proxy_pass http://i7a302.p.ssafy.io:8081;
	}

}